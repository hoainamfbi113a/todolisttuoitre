{"ast":null,"code":"import { addToDo, checked, deleteToDo, editToDo, removeAllChecked, sortAZ } from \"../type/type\";\nconst stateDefault = {\n  todo: [{\n    content: \"ăn cơm\",\n    status: false\n  }, {\n    content: \"mua nhà\",\n    status: false\n  }, {\n    content: \"mua xe\",\n    status: true\n  }]\n};\nexport const ToDoReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : stateDefault;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case addToDo:\n      {\n        const {\n          content\n        } = action.todo;\n        const newToDo = [...state.todo, {\n          content: content,\n          status: false\n        }];\n        const newState = { ...state,\n          todo: [...newToDo]\n        };\n        state = newState;\n        return { ...state\n        };\n      }\n      ;\n\n    case editToDo:\n      {\n        const {\n          content,\n          key\n        } = action.todo;\n        let newToDo = [...state.todo];\n        newToDo[key].content = content.content;\n        state.todo = [...newToDo];\n        return { ...state\n        };\n      }\n      ;\n\n    case deleteToDo:\n      {\n        let {\n          index\n        } = action;\n        let newToDo = [...state.todo];\n        newToDo.splice(index, 1);\n        state.todo = [...newToDo];\n        return { ...state\n        };\n      }\n      ;\n\n    case checked:\n      {\n        let {\n          checked,\n          index\n        } = action.checkedToDo;\n        let newToDoList = [...state.todo];\n        newToDoList[index].status = checked;\n        state.todo = [...newToDoList];\n        return { ...state\n        };\n      }\n      ;\n\n    case removeAllChecked:\n      {\n        let newToDoList = [...state.todo];\n        newToDoList.forEach(work => work.status = false);\n        state.todo = [...newToDoList];\n        return { ...state\n        };\n      }\n      ;\n\n    case sortAZ:\n      {\n        let newToDoList = [...state.todo];\n        let newList = newToDoList.sort(function (a, b) {\n          if (a.status < b.status) {\n            return -1;\n          } else {\n            return 1;\n          }\n        });\n        console.log(newList);\n        state.todo = [...newList];\n        return { ...state\n        };\n      }\n\n    default:\n      return { ...state\n      };\n  }\n};\n_c = ToDoReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoReducer\");","map":{"version":3,"names":["addToDo","checked","deleteToDo","editToDo","removeAllChecked","sortAZ","stateDefault","todo","content","status","ToDoReducer","state","action","type","newToDo","newState","key","index","splice","checkedToDo","newToDoList","forEach","work","newList","sort","a","b","console","log"],"sources":["/home/pc/todolisttuoitre/my-app/src/redux/toDoReducer/todoReducer.js"],"sourcesContent":["import { addToDo, checked, deleteToDo, editToDo, removeAllChecked, sortAZ } from \"../type/type\";\n\nconst stateDefault = {\n    todo: [\n        {content: \"ăn cơm\", status:false},\n        {content: \"mua nhà\", status:false},\n        {content: \"mua xe\", status:true},\n    ]   \n}\n\nexport const ToDoReducer = (state = stateDefault, action)=>{\n    switch(action.type){\n        case addToDo: {\n            const {content} = action.todo;\n            const newToDo = [...state.todo,{content: content,status:false}];\n            const newState = {...state,todo:[...newToDo]};\n            state = newState;\n            return {...state}\n        };\n        case editToDo:{\n            const {content,key} = action.todo;\n            let newToDo = [...state.todo];\n            newToDo[key].content = content.content;\n            state.todo = [...newToDo];\n            return {...state}\n        };\n        case deleteToDo:{\n            let {index} = action;\n            let newToDo = [...state.todo];\n            newToDo.splice(index,1);\n            state.todo = [...newToDo];\n            return {...state}\n        };\n        case checked:{\n            let {checked,index} = action.checkedToDo;\n            let newToDoList = [...state.todo];\n            newToDoList[index].status = checked;\n            state.todo = [...newToDoList];\n            return {...state};\n        };\n        case removeAllChecked: {\n            let newToDoList = [...state.todo];\n            newToDoList.forEach(work => work.status = false); \n            state.todo = [...newToDoList];\n            return {...state};\n        };\n        case sortAZ: {\n            let newToDoList = [...state.todo];\n            let newList = newToDoList.sort(function(a,b){\n                if(a.status < b.status){\n                    return -1\n                } else {\n                    return 1\n                }\n            });\n            console.log(newList)\n            state.todo = [...newList];\n            return {...state}\n        }\n        default: return {...state}\n    }\n} "],"mappings":"AAAA,SAASA,OAAT,EAAkBC,OAAlB,EAA2BC,UAA3B,EAAuCC,QAAvC,EAAiDC,gBAAjD,EAAmEC,MAAnE,QAAiF,cAAjF;AAEA,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAE,CACF;IAACC,OAAO,EAAE,QAAV;IAAoBC,MAAM,EAAC;EAA3B,CADE,EAEF;IAACD,OAAO,EAAE,SAAV;IAAqBC,MAAM,EAAC;EAA5B,CAFE,EAGF;IAACD,OAAO,EAAE,QAAV;IAAoBC,MAAM,EAAC;EAA3B,CAHE;AADW,CAArB;AAQA,OAAO,MAAMC,WAAW,GAAG,YAAgC;EAAA,IAA/BC,KAA+B,uEAAvBL,YAAuB;EAAA,IAATM,MAAS;;EACvD,QAAOA,MAAM,CAACC,IAAd;IACI,KAAKb,OAAL;MAAc;QACV,MAAM;UAACQ;QAAD,IAAYI,MAAM,CAACL,IAAzB;QACA,MAAMO,OAAO,GAAG,CAAC,GAAGH,KAAK,CAACJ,IAAV,EAAe;UAACC,OAAO,EAAEA,OAAV;UAAkBC,MAAM,EAAC;QAAzB,CAAf,CAAhB;QACA,MAAMM,QAAQ,GAAG,EAAC,GAAGJ,KAAJ;UAAUJ,IAAI,EAAC,CAAC,GAAGO,OAAJ;QAAf,CAAjB;QACAH,KAAK,GAAGI,QAAR;QACA,OAAO,EAAC,GAAGJ;QAAJ,CAAP;MACH;MAAA;;IACD,KAAKR,QAAL;MAAc;QACV,MAAM;UAACK,OAAD;UAASQ;QAAT,IAAgBJ,MAAM,CAACL,IAA7B;QACA,IAAIO,OAAO,GAAG,CAAC,GAAGH,KAAK,CAACJ,IAAV,CAAd;QACAO,OAAO,CAACE,GAAD,CAAP,CAAaR,OAAb,GAAuBA,OAAO,CAACA,OAA/B;QACAG,KAAK,CAACJ,IAAN,GAAa,CAAC,GAAGO,OAAJ,CAAb;QACA,OAAO,EAAC,GAAGH;QAAJ,CAAP;MACH;MAAA;;IACD,KAAKT,UAAL;MAAgB;QACZ,IAAI;UAACe;QAAD,IAAUL,MAAd;QACA,IAAIE,OAAO,GAAG,CAAC,GAAGH,KAAK,CAACJ,IAAV,CAAd;QACAO,OAAO,CAACI,MAAR,CAAeD,KAAf,EAAqB,CAArB;QACAN,KAAK,CAACJ,IAAN,GAAa,CAAC,GAAGO,OAAJ,CAAb;QACA,OAAO,EAAC,GAAGH;QAAJ,CAAP;MACH;MAAA;;IACD,KAAKV,OAAL;MAAa;QACT,IAAI;UAACA,OAAD;UAASgB;QAAT,IAAkBL,MAAM,CAACO,WAA7B;QACA,IAAIC,WAAW,GAAG,CAAC,GAAGT,KAAK,CAACJ,IAAV,CAAlB;QACAa,WAAW,CAACH,KAAD,CAAX,CAAmBR,MAAnB,GAA4BR,OAA5B;QACAU,KAAK,CAACJ,IAAN,GAAa,CAAC,GAAGa,WAAJ,CAAb;QACA,OAAO,EAAC,GAAGT;QAAJ,CAAP;MACH;MAAA;;IACD,KAAKP,gBAAL;MAAuB;QACnB,IAAIgB,WAAW,GAAG,CAAC,GAAGT,KAAK,CAACJ,IAAV,CAAlB;QACAa,WAAW,CAACC,OAAZ,CAAoBC,IAAI,IAAIA,IAAI,CAACb,MAAL,GAAc,KAA1C;QACAE,KAAK,CAACJ,IAAN,GAAa,CAAC,GAAGa,WAAJ,CAAb;QACA,OAAO,EAAC,GAAGT;QAAJ,CAAP;MACH;MAAA;;IACD,KAAKN,MAAL;MAAa;QACT,IAAIe,WAAW,GAAG,CAAC,GAAGT,KAAK,CAACJ,IAAV,CAAlB;QACA,IAAIgB,OAAO,GAAGH,WAAW,CAACI,IAAZ,CAAiB,UAASC,CAAT,EAAWC,CAAX,EAAa;UACxC,IAAGD,CAAC,CAAChB,MAAF,GAAWiB,CAAC,CAACjB,MAAhB,EAAuB;YACnB,OAAO,CAAC,CAAR;UACH,CAFD,MAEO;YACH,OAAO,CAAP;UACH;QACJ,CANa,CAAd;QAOAkB,OAAO,CAACC,GAAR,CAAYL,OAAZ;QACAZ,KAAK,CAACJ,IAAN,GAAa,CAAC,GAAGgB,OAAJ,CAAb;QACA,OAAO,EAAC,GAAGZ;QAAJ,CAAP;MACH;;IACD;MAAS,OAAO,EAAC,GAAGA;MAAJ,CAAP;EAhDb;AAkDH,CAnDM;KAAMD,W"},"metadata":{},"sourceType":"module"}