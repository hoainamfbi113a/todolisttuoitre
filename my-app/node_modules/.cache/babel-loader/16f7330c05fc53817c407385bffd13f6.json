{"ast":null,"code":"import { addToDo, checked, deleteToDo, editToDo, removeAllChecked, sortAZ, sortZA } from \"../type/type\";\nconst stateDefault = {\n  todo: [],\n  isLoading: false\n};\nexport const ToDoReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : stateDefault;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case addToDo:\n      {\n        const {\n          textTask\n        } = action.todo;\n        const newToDo = [...state.todo, {\n          textTask: textTask,\n          status: false\n        }];\n        const newState = { ...state,\n          todo: [...newToDo]\n        };\n        state = newState;\n        return { ...state\n        };\n      }\n      ;\n\n    case editToDo:\n      {\n        const {\n          textTask,\n          key\n        } = action.todo;\n        let newToDo = [...state.todo];\n        newToDo[key].textTask = textTask;\n        state.todo = [...newToDo];\n        return { ...state\n        };\n      }\n      ;\n\n    case deleteToDo:\n      {\n        let {\n          index\n        } = action;\n        let newToDo = [...state.todo];\n        newToDo.splice(index, 1);\n        state.todo = [...newToDo];\n        return { ...state\n        };\n      }\n      ;\n\n    case checked:\n      {\n        let {\n          checked,\n          index\n        } = action.checkedToDo;\n        let newToDoList = [...state.todo];\n        newToDoList[index].status = checked;\n        state.todo = [...newToDoList];\n        return { ...state\n        };\n      }\n      ;\n\n    case removeAllChecked:\n      {\n        let newToDoList = [...state.todo];\n        newToDoList.forEach(work => work.status = false);\n        state.todo = [...newToDoList];\n        return { ...state\n        };\n      }\n      ;\n\n    case sortAZ:\n      {\n        let newToDoList = [...state.todo];\n        let newList = newToDoList.sort(function (a, b) {\n          if (a.status < b.status) {\n            return -1;\n          } else {\n            return 1;\n          }\n        }); // console.log(newList)\n\n        state.todo = [...newList];\n        return { ...state\n        };\n      }\n      ;\n\n    case sortZA:\n      {\n        let newToDoList = [...state.todo];\n        let newList = newToDoList.sort(function (a, b) {\n          if (a.status > b.status) {\n            return -1;\n          } else {\n            return 1;\n          }\n        }); // console.log(newList)\n\n        state.todo = [...newList];\n        return { ...state\n        };\n      }\n      ;\n\n    case \"getToDoListReducer\":\n      {\n        let newToDoList = [...state.todo]; // console.log(\"todoReducer\");\n\n        newToDoList = [...action.list];\n        state.todo = [...newToDoList];\n        state.isLoading = false;\n        return { ...state\n        };\n      }\n      ;\n\n    case \"setIsLoading\":\n      {\n        state.isLoading = true;\n        return { ...state\n        };\n      }\n\n    default:\n      return { ...state\n      };\n  }\n};\n_c = ToDoReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoReducer\");","map":{"version":3,"names":["addToDo","checked","deleteToDo","editToDo","removeAllChecked","sortAZ","sortZA","stateDefault","todo","isLoading","ToDoReducer","state","action","type","textTask","newToDo","status","newState","key","index","splice","checkedToDo","newToDoList","forEach","work","newList","sort","a","b","list"],"sources":["/home/pc/todolisttuoitre/my-app/src/redux/toDoReducer/todoReducer.js"],"sourcesContent":["import { addToDo, checked, deleteToDo, editToDo, removeAllChecked, sortAZ, sortZA } from \"../type/type\";\n\nconst stateDefault = {\n    todo: [\n        \n    ],\n    isLoading: false,\n}\n\nexport const ToDoReducer = (state = stateDefault, action)=>{\n    switch(action.type){\n        case addToDo: {\n            const {textTask} = action.todo;\n            const newToDo = [...state.todo,{textTask: textTask,status:false}];\n            const newState = {...state,todo:[...newToDo]};\n            state = newState;\n            return {...state}\n        };\n        case editToDo:{\n            const {textTask,key} = action.todo;\n            let newToDo = [...state.todo];\n            newToDo[key].textTask = textTask;\n            state.todo = [...newToDo];\n            return {...state}\n        };\n        case deleteToDo:{\n            let {index} = action;\n            let newToDo = [...state.todo];\n            newToDo.splice(index,1);\n            state.todo = [...newToDo];\n            return {...state}\n        };\n        case checked:{\n            let {checked,index} = action.checkedToDo;\n            let newToDoList = [...state.todo];\n            newToDoList[index].status = checked;\n            state.todo = [...newToDoList];\n            return {...state};\n        };\n        case removeAllChecked: {\n            let newToDoList = [...state.todo];\n            newToDoList.forEach(work => work.status = false); \n            state.todo = [...newToDoList];\n            return {...state};\n        };\n        case sortAZ: {\n            let newToDoList = [...state.todo];\n            let newList = newToDoList.sort(function(a,b){\n                if(a.status < b.status){\n                    return -1\n                } else {\n                    return 1\n                }\n            });\n            // console.log(newList)\n            state.todo = [...newList];\n            return {...state}\n        };\n        case sortZA: {\n            let newToDoList = [...state.todo];\n            let newList = newToDoList.sort(function(a,b){\n                if(a.status > b.status){\n                    return -1\n                } else {\n                    return 1\n                }\n            });\n            // console.log(newList)\n            state.todo = [...newList];\n            return {...state}\n        };\n        case \"getToDoListReducer\": {\n            let newToDoList = [...state.todo];\n            // console.log(\"todoReducer\");\n            newToDoList = [...action.list];\n            state.todo = [...newToDoList];\n            state.isLoading = false;\n            return {...state}\n        };\n        case \"setIsLoading\": {\n            state.isLoading = true;\n            return {...state};\n        }\n        default: return {...state}\n    }\n} "],"mappings":"AAAA,SAASA,OAAT,EAAkBC,OAAlB,EAA2BC,UAA3B,EAAuCC,QAAvC,EAAiDC,gBAAjD,EAAmEC,MAAnE,EAA2EC,MAA3E,QAAyF,cAAzF;AAEA,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAE,EADW;EAIjBC,SAAS,EAAE;AAJM,CAArB;AAOA,OAAO,MAAMC,WAAW,GAAG,YAAgC;EAAA,IAA/BC,KAA+B,uEAAvBJ,YAAuB;EAAA,IAATK,MAAS;;EACvD,QAAOA,MAAM,CAACC,IAAd;IACI,KAAKb,OAAL;MAAc;QACV,MAAM;UAACc;QAAD,IAAaF,MAAM,CAACJ,IAA1B;QACA,MAAMO,OAAO,GAAG,CAAC,GAAGJ,KAAK,CAACH,IAAV,EAAe;UAACM,QAAQ,EAAEA,QAAX;UAAoBE,MAAM,EAAC;QAA3B,CAAf,CAAhB;QACA,MAAMC,QAAQ,GAAG,EAAC,GAAGN,KAAJ;UAAUH,IAAI,EAAC,CAAC,GAAGO,OAAJ;QAAf,CAAjB;QACAJ,KAAK,GAAGM,QAAR;QACA,OAAO,EAAC,GAAGN;QAAJ,CAAP;MACH;MAAA;;IACD,KAAKR,QAAL;MAAc;QACV,MAAM;UAACW,QAAD;UAAUI;QAAV,IAAiBN,MAAM,CAACJ,IAA9B;QACA,IAAIO,OAAO,GAAG,CAAC,GAAGJ,KAAK,CAACH,IAAV,CAAd;QACAO,OAAO,CAACG,GAAD,CAAP,CAAaJ,QAAb,GAAwBA,QAAxB;QACAH,KAAK,CAACH,IAAN,GAAa,CAAC,GAAGO,OAAJ,CAAb;QACA,OAAO,EAAC,GAAGJ;QAAJ,CAAP;MACH;MAAA;;IACD,KAAKT,UAAL;MAAgB;QACZ,IAAI;UAACiB;QAAD,IAAUP,MAAd;QACA,IAAIG,OAAO,GAAG,CAAC,GAAGJ,KAAK,CAACH,IAAV,CAAd;QACAO,OAAO,CAACK,MAAR,CAAeD,KAAf,EAAqB,CAArB;QACAR,KAAK,CAACH,IAAN,GAAa,CAAC,GAAGO,OAAJ,CAAb;QACA,OAAO,EAAC,GAAGJ;QAAJ,CAAP;MACH;MAAA;;IACD,KAAKV,OAAL;MAAa;QACT,IAAI;UAACA,OAAD;UAASkB;QAAT,IAAkBP,MAAM,CAACS,WAA7B;QACA,IAAIC,WAAW,GAAG,CAAC,GAAGX,KAAK,CAACH,IAAV,CAAlB;QACAc,WAAW,CAACH,KAAD,CAAX,CAAmBH,MAAnB,GAA4Bf,OAA5B;QACAU,KAAK,CAACH,IAAN,GAAa,CAAC,GAAGc,WAAJ,CAAb;QACA,OAAO,EAAC,GAAGX;QAAJ,CAAP;MACH;MAAA;;IACD,KAAKP,gBAAL;MAAuB;QACnB,IAAIkB,WAAW,GAAG,CAAC,GAAGX,KAAK,CAACH,IAAV,CAAlB;QACAc,WAAW,CAACC,OAAZ,CAAoBC,IAAI,IAAIA,IAAI,CAACR,MAAL,GAAc,KAA1C;QACAL,KAAK,CAACH,IAAN,GAAa,CAAC,GAAGc,WAAJ,CAAb;QACA,OAAO,EAAC,GAAGX;QAAJ,CAAP;MACH;MAAA;;IACD,KAAKN,MAAL;MAAa;QACT,IAAIiB,WAAW,GAAG,CAAC,GAAGX,KAAK,CAACH,IAAV,CAAlB;QACA,IAAIiB,OAAO,GAAGH,WAAW,CAACI,IAAZ,CAAiB,UAASC,CAAT,EAAWC,CAAX,EAAa;UACxC,IAAGD,CAAC,CAACX,MAAF,GAAWY,CAAC,CAACZ,MAAhB,EAAuB;YACnB,OAAO,CAAC,CAAR;UACH,CAFD,MAEO;YACH,OAAO,CAAP;UACH;QACJ,CANa,CAAd,CAFS,CAST;;QACAL,KAAK,CAACH,IAAN,GAAa,CAAC,GAAGiB,OAAJ,CAAb;QACA,OAAO,EAAC,GAAGd;QAAJ,CAAP;MACH;MAAA;;IACD,KAAKL,MAAL;MAAa;QACT,IAAIgB,WAAW,GAAG,CAAC,GAAGX,KAAK,CAACH,IAAV,CAAlB;QACA,IAAIiB,OAAO,GAAGH,WAAW,CAACI,IAAZ,CAAiB,UAASC,CAAT,EAAWC,CAAX,EAAa;UACxC,IAAGD,CAAC,CAACX,MAAF,GAAWY,CAAC,CAACZ,MAAhB,EAAuB;YACnB,OAAO,CAAC,CAAR;UACH,CAFD,MAEO;YACH,OAAO,CAAP;UACH;QACJ,CANa,CAAd,CAFS,CAST;;QACAL,KAAK,CAACH,IAAN,GAAa,CAAC,GAAGiB,OAAJ,CAAb;QACA,OAAO,EAAC,GAAGd;QAAJ,CAAP;MACH;MAAA;;IACD,KAAK,oBAAL;MAA2B;QACvB,IAAIW,WAAW,GAAG,CAAC,GAAGX,KAAK,CAACH,IAAV,CAAlB,CADuB,CAEvB;;QACAc,WAAW,GAAG,CAAC,GAAGV,MAAM,CAACiB,IAAX,CAAd;QACAlB,KAAK,CAACH,IAAN,GAAa,CAAC,GAAGc,WAAJ,CAAb;QACAX,KAAK,CAACF,SAAN,GAAkB,KAAlB;QACA,OAAO,EAAC,GAAGE;QAAJ,CAAP;MACH;MAAA;;IACD,KAAK,cAAL;MAAqB;QACjBA,KAAK,CAACF,SAAN,GAAkB,IAAlB;QACA,OAAO,EAAC,GAAGE;QAAJ,CAAP;MACH;;IACD;MAAS,OAAO,EAAC,GAAGA;MAAJ,CAAP;EAzEb;AA2EH,CA5EM;KAAMD,W"},"metadata":{},"sourceType":"module"}